# 问题 1：在函数内部，针对参数使用 赋值语句，会不会影响调用函数时传递的 实参变量？ —— 不会！
def demo(num, num_list):
    print("*" * 50)
    print("函数内部代码开始------------")  # 函数内部代码开始------------

    print("传入是实参", num)  # 传入是实参 22
    print("传入是实参", num_list)  # 传入是实参 [1, 2, 3, 4]

    # 在函数内部针对参数使用赋值语句,不会修改到外部的实参变量
    num = 10
    num_list = [5, 6, 7, 8]
    print("被重新赋值的参数", num)  # 被重新赋值的参数 10
    print("被重新赋值的参数", num_list)  # 被重新赋值的参数 [5, 6, 7, 8]

    print("函数内部代码执行完成-----------")  # 函数内部代码执行完成-----------


gl_num = 22
gl_num_list = [1, 2, 3, 4]
demo(gl_num, gl_num_list)
print("函数外部实参", gl_num)  # 函数外部实参 22
print("函数外部实参", gl_num_list)  # 函数外部实参 [1, 2, 3, 4]
print("*" * 50)


"""
结果：
**************************************************
函数内部代码开始------------
传入是实参 22
传入是实参 [1, 2, 3, 4]
被重新赋值的参数 10
被重新赋值的参数 [5, 6, 7, 8]
函数内部代码执行完成-----------
函数外部实参 22
函数外部实参 [1, 2, 3, 4]
**************************************************
"""


